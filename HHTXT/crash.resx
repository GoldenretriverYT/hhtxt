<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>